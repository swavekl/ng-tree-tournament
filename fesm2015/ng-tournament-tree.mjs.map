{"version":3,"file":"ng-tournament-tree.mjs","sources":["../../../projects/ng-tournament-tree/src/lib/double-elimination-tree/double-elimination-tree.component.html","../../../projects/ng-tournament-tree/src/lib/double-elimination-tree/double-elimination-tree.component.ts","../../../projects/ng-tournament-tree/src/lib/double-elimination-tree/ngtt-double-elimination-tree.module.ts","../../../projects/ng-tournament-tree/src/lib/single-elimination-tree/single-elimination-tree.component.html","../../../projects/ng-tournament-tree/src/lib/single-elimination-tree/single-elimination-tree.component.ts","../../../projects/ng-tournament-tree/src/lib/single-elimination-tree/ngtt-single-elimination-tree.module.ts","../../../projects/ng-tournament-tree/src/public-api.ts","../../../projects/ng-tournament-tree/src/ng-tournament-tree.ts"],"sourcesContent":["<div class=\"ngtt-de__container\">\r\n  <div class=\"ngtt-de__winners-bracket-wrapper\">\r\n    <ng-container *ngFor=\"let winnersround of winnersBracket\">\r\n      <!--      {{winnersround.round}}-->\r\n      <div class=\"ngtt-de__winners-round-wrapper\">\r\n        <ng-container *ngFor=\"let match of winnersround.matches\">\r\n          <div class=\"ngtt-de__winners-match-wrapper\">\r\n            <div class=\"ngtt-de__match-component-container\">\r\n              <ng-container *ngTemplateOutlet=\"matchTemplate; context:{$implicit: match}\"></ng-container>\r\n            </div>\r\n          </div>\r\n        </ng-container>\r\n      </div>\r\n    </ng-container>\r\n    <div class=\"ngtt-de__winners-round-wrapper\">\r\n      <div class=\"ngtt-de__finale-match-wrapper\">\r\n        <div class=\"ngtt-de__match-component-container\">\r\n          <ng-container *ngTemplateOutlet=\"matchTemplate; context:{$implicit: final.matches[0]}\"></ng-container>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"ngtt-de__losers-bracket-wrapper\">\r\n    <ng-container *ngFor=\"let losersround of losersBracket\">\r\n      <!--      {{losersround.round}}<br>-->\r\n      <div class=\"ngtt-de__losers-round-wrapper\">\r\n        <ng-container *ngFor=\"let match of losersround.matches\">\r\n          <div class=\"ngtt-de__losers-match-wrapper\">\r\n            <div class=\"ngtt-de__match-component-container\">\r\n              <ng-container *ngTemplateOutlet=\"matchTemplate; context:{$implicit: match}\"></ng-container>\r\n            </div>\r\n          </div>\r\n        </ng-container>\r\n      </div>\r\n    </ng-container>\r\n  </div>\r\n</div>\r\n","import {Component, Input, OnChanges, SimpleChanges, TemplateRef} from '@angular/core';\r\nimport {NgttRound, NgttTournament} from '../declarations/interfaces';\r\n\r\n@Component({\r\n  selector: 'ngtt-double-elimination-tree',\r\n  templateUrl: './double-elimination-tree.component.html',\r\n  styleUrls: ['./double-elimination-tree.component.scss']\r\n})\r\nexport class DoubleEliminationTreeComponent implements OnChanges {\r\n  @Input() matchTemplate: TemplateRef<any>;\r\n  @Input() tournament: NgttTournament;\r\n\r\n  public losersBracket: NgttRound[];\r\n  public winnersBracket: NgttRound[];\r\n  public final: NgttRound;\r\n\r\n  constructor() {\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    this.losersBracket = this.tournament.rounds.filter(round => {\r\n      return round.type === 'Loserbracket';\r\n    });\r\n    this.winnersBracket = this.tournament.rounds.filter(round => {\r\n      return round.type === 'Winnerbracket';\r\n    });\r\n    this.final = this.tournament.rounds.filter(round => {\r\n      return round.type === 'Final';\r\n    }).shift();\r\n  }\r\n\r\n}\r\n","import {CommonModule} from '@angular/common';\r\nimport {NgModule} from '@angular/core';\r\nimport {DoubleEliminationTreeComponent} from './double-elimination-tree.component';\r\n\r\nconst components = [DoubleEliminationTreeComponent];\r\n\r\n@NgModule({\r\n  declarations: components,\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  exports: components\r\n})\r\nexport class NgttDoubleEliminationTreeModule {\r\n}\r\n","<div class=\"ngtt-se__container\">\r\n  <div class=\"ngtt-se__bracket-wrapper\">\r\n    <ng-container *ngFor=\"let winnersround of winnersBracket; let i = index\">\r\n      <div class=\"ngtt-se__round-wrapper\">\r\n        <ng-container *ngFor=\"let match of winnersround.matches\">\r\n          <div class=\"ngtt-se__match-wrapper\">\r\n            <div class=\"ngtt-se__match-component-container\">\r\n              <ng-container *ngTemplateOutlet=\"matchTemplate; context:{$implicit: match}\"></ng-container>\r\n            </div>\r\n          </div>\r\n        </ng-container>\r\n      </div>\r\n    </ng-container>\r\n    <ng-container>\r\n      <div class=\"ngtt-se__round-wrapper\">\r\n        <div class=\"ngtt-se__match-wrapper\">\r\n          <div class=\"ngtt-se__finale-match-wrapper\">\r\n            <div class=\"ngtt-se__finale-component-container\">\r\n              <ng-container\r\n                *ngTemplateOutlet=\"matchTemplate; context:{$implicit: final.matches[0]}\"></ng-container>\r\n            </div>\r\n            <div class=\"ngtt-se__match-component-container\" *ngIf=\"final.matches.length > 1\">\r\n              <ng-container *ngTemplateOutlet=\"matchTemplate; context:{$implicit: final.matches[1]}\"></ng-container>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </ng-container>\r\n  </div>\r\n</div>\r\n","import {Component, Input, OnChanges, OnInit, SimpleChanges, TemplateRef} from '@angular/core';\r\nimport {NgttRound, NgttTournament} from '../declarations/interfaces';\r\n\r\n@Component({\r\n  selector: 'ngtt-single-elimination-tree',\r\n  templateUrl: './single-elimination-tree.component.html',\r\n  styleUrls: ['./single-elimination-tree.component.scss']\r\n})\r\nexport class SingleEliminationTreeComponent implements OnInit, OnChanges {\r\n  @Input() matchTemplate: TemplateRef<any>;\r\n  @Input() tournament: NgttTournament;\r\n\r\n  public winnersBracket: NgttRound[];\r\n  public final: NgttRound;\r\n\r\n  constructor() {\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes.hasOwnProperty('tournament') && changes.tournament.currentValue) {\r\n      this.winnersBracket = this.tournament.rounds.filter(round => {\r\n        return round.type === 'Winnerbracket';\r\n      });\r\n    }\r\n    console.log(this.winnersBracket);\r\n    this.final = this.tournament.rounds.filter(round => {\r\n      return round.type === 'Final';\r\n    }).shift();\r\n    console.log(this.final);\r\n  }\r\n\r\n}\r\n","import {CommonModule} from '@angular/common';\r\nimport {NgModule} from '@angular/core';\r\nimport {SingleEliminationTreeComponent} from './single-elimination-tree.component';\r\n\r\nconst components = [SingleEliminationTreeComponent];\r\n\r\n@NgModule({\r\n  declarations: components,\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  exports: components\r\n})\r\nexport class NgttSingleEliminationTreeModule {\r\n}\r\n","/*\r\n * Public API Surface of ng-tournament-tree\r\n */\r\n\r\n// export * from './lib/ng-tournament-tree.module';\r\nexport {NgttDoubleEliminationTreeModule} from './lib/double-elimination-tree/ngtt-double-elimination-tree.module';\r\nexport {NgttSingleEliminationTreeModule} from './lib/single-elimination-tree/ngtt-single-elimination-tree.module';\r\nexport {DoubleEliminationTreeComponent} from './lib/double-elimination-tree/double-elimination-tree.component';\r\nexport {SingleEliminationTreeComponent} from './lib/single-elimination-tree/single-elimination-tree.component';\r\n\r\nexport * from './lib/declarations/interfaces';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["_c0","components"],"mappings":"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"}