{"version":3,"file":"ng-tournament-tree.mjs","sources":["../../../projects/ng-tournament-tree/src/lib/double-elimination-tree/double-elimination-tree.component.html","../../../projects/ng-tournament-tree/src/lib/double-elimination-tree/double-elimination-tree.component.ts","../../../projects/ng-tournament-tree/src/lib/double-elimination-tree/ngtt-double-elimination-tree.module.ts","../../../projects/ng-tournament-tree/src/lib/single-elimination-tree/single-elimination-tree.component.html","../../../projects/ng-tournament-tree/src/lib/single-elimination-tree/single-elimination-tree.component.ts","../../../projects/ng-tournament-tree/src/lib/single-elimination-tree/ngtt-single-elimination-tree.module.ts","../../../projects/ng-tournament-tree/src/public-api.ts","../../../projects/ng-tournament-tree/src/ng-tournament-tree.ts"],"sourcesContent":["<div class=\"ngtt-de__container\">\r\n  <div class=\"ngtt-de__winners-bracket-wrapper\">\r\n    <ng-container *ngFor=\"let winnersround of winnersBracket\">\r\n      <!--      {{winnersround.round}}-->\r\n      <div class=\"ngtt-de__winners-round-wrapper\">\r\n        <ng-container *ngFor=\"let match of winnersround.matches\">\r\n          <div class=\"ngtt-de__winners-match-wrapper\">\r\n            <div class=\"ngtt-de__match-component-container\">\r\n              <ng-container *ngTemplateOutlet=\"matchTemplate; context:{$implicit: match}\"></ng-container>\r\n            </div>\r\n          </div>\r\n        </ng-container>\r\n      </div>\r\n    </ng-container>\r\n    <div class=\"ngtt-de__winners-round-wrapper\">\r\n      <div class=\"ngtt-de__finale-match-wrapper\">\r\n        <div class=\"ngtt-de__match-component-container\">\r\n          <ng-container *ngTemplateOutlet=\"matchTemplate; context:{$implicit: final.matches[0]}\"></ng-container>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"ngtt-de__losers-bracket-wrapper\">\r\n    <ng-container *ngFor=\"let losersround of losersBracket\">\r\n      <!--      {{losersround.round}}<br>-->\r\n      <div class=\"ngtt-de__losers-round-wrapper\">\r\n        <ng-container *ngFor=\"let match of losersround.matches\">\r\n          <div class=\"ngtt-de__losers-match-wrapper\">\r\n            <div class=\"ngtt-de__match-component-container\">\r\n              <ng-container *ngTemplateOutlet=\"matchTemplate; context:{$implicit: match}\"></ng-container>\r\n            </div>\r\n          </div>\r\n        </ng-container>\r\n      </div>\r\n    </ng-container>\r\n  </div>\r\n</div>\r\n","import {Component, Input, OnChanges, SimpleChanges, TemplateRef} from '@angular/core';\r\nimport {NgttRound, NgttTournament} from '../declarations/interfaces';\r\n\r\n@Component({\r\n  selector: 'ngtt-double-elimination-tree',\r\n  templateUrl: './double-elimination-tree.component.html',\r\n  styleUrls: ['./double-elimination-tree.component.scss']\r\n})\r\nexport class DoubleEliminationTreeComponent implements OnChanges {\r\n  @Input() matchTemplate: TemplateRef<any>;\r\n  @Input() tournament: NgttTournament;\r\n\r\n  public losersBracket: NgttRound[];\r\n  public winnersBracket: NgttRound[];\r\n  public final: NgttRound;\r\n\r\n  constructor() {\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    this.losersBracket = this.tournament.rounds.filter(round => {\r\n      return round.type === 'Loserbracket';\r\n    });\r\n    this.winnersBracket = this.tournament.rounds.filter(round => {\r\n      return round.type === 'Winnerbracket';\r\n    });\r\n    this.final = this.tournament.rounds.filter(round => {\r\n      return round.type === 'Final';\r\n    }).shift();\r\n  }\r\n\r\n}\r\n","import {CommonModule} from '@angular/common';\r\nimport {NgModule} from '@angular/core';\r\nimport {DoubleEliminationTreeComponent} from './double-elimination-tree.component';\r\n\r\nconst components = [DoubleEliminationTreeComponent];\r\n\r\n@NgModule({\r\n  declarations: components,\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  exports: components\r\n})\r\nexport class NgttDoubleEliminationTreeModule {\r\n}\r\n","<div class=\"ngtt-se__container\">\r\n  <div class=\"ngtt-se__bracket-wrapper\">\r\n    <ng-container *ngFor=\"let winnersround of winnersBracket; let i = index\">\r\n      <div class=\"ngtt-se__round-wrapper\">\r\n        <ng-container *ngFor=\"let match of winnersround.matches\">\r\n          <div class=\"ngtt-se__match-wrapper\">\r\n            <div class=\"ngtt-se__match-component-container\">\r\n              <ng-container *ngTemplateOutlet=\"matchTemplate; context:{$implicit: match}\"></ng-container>\r\n            </div>\r\n          </div>\r\n        </ng-container>\r\n      </div>\r\n    </ng-container>\r\n    <ng-container>\r\n      <div class=\"ngtt-se__round-wrapper\">\r\n        <div class=\"ngtt-se__match-wrapper\">\r\n          <div class=\"ngtt-se__finale-match-wrapper\">\r\n            <div class=\"ngtt-se__finale-component-container\">\r\n              <ng-container\r\n                *ngTemplateOutlet=\"matchTemplate; context:{$implicit: final.matches[0]}\"></ng-container>\r\n            </div>\r\n            <div class=\"ngtt-se__match-component-container\" *ngIf=\"final.matches.length > 1\">\r\n              <ng-container *ngTemplateOutlet=\"matchTemplate; context:{$implicit: final.matches[1]}\"></ng-container>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </ng-container>\r\n  </div>\r\n</div>\r\n","import {Component, Input, OnChanges, OnInit, SimpleChanges, TemplateRef} from '@angular/core';\r\nimport {NgttRound, NgttTournament} from '../declarations/interfaces';\r\n\r\n@Component({\r\n  selector: 'ngtt-single-elimination-tree',\r\n  templateUrl: './single-elimination-tree.component.html',\r\n  styleUrls: ['./single-elimination-tree.component.scss']\r\n})\r\nexport class SingleEliminationTreeComponent implements OnInit, OnChanges {\r\n  @Input() matchTemplate: TemplateRef<any>;\r\n  @Input() tournament: NgttTournament;\r\n\r\n  public winnersBracket: NgttRound[];\r\n  public final: NgttRound;\r\n\r\n  constructor() {\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes.hasOwnProperty('tournament') && changes.tournament.currentValue) {\r\n      this.winnersBracket = this.tournament.rounds.filter(round => {\r\n        return round.type === 'Winnerbracket';\r\n      });\r\n    }\r\n    console.log(this.winnersBracket);\r\n    this.final = this.tournament.rounds.filter(round => {\r\n      return round.type === 'Final';\r\n    }).shift();\r\n    console.log(this.final);\r\n  }\r\n\r\n}\r\n","import {CommonModule} from '@angular/common';\r\nimport {NgModule} from '@angular/core';\r\nimport {SingleEliminationTreeComponent} from './single-elimination-tree.component';\r\n\r\nconst components = [SingleEliminationTreeComponent];\r\n\r\n@NgModule({\r\n  declarations: components,\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  exports: components\r\n})\r\nexport class NgttSingleEliminationTreeModule {\r\n}\r\n","/*\r\n * Public API Surface of ng-tournament-tree\r\n */\r\n\r\n// export * from './lib/ng-tournament-tree.module';\r\nexport {NgttDoubleEliminationTreeModule} from './lib/double-elimination-tree/ngtt-double-elimination-tree.module';\r\nexport {NgttSingleEliminationTreeModule} from './lib/single-elimination-tree/ngtt-single-elimination-tree.module';\r\nexport {DoubleEliminationTreeComponent} from './lib/double-elimination-tree/double-elimination-tree.component';\r\nexport {SingleEliminationTreeComponent} from './lib/single-elimination-tree/single-elimination-tree.component';\r\n\r\nexport * from './lib/declarations/interfaces';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["_c0","components"],"mappings":"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"}